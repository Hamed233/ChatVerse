// Mocks generated by Mockito 5.4.4 from annotations
// in chatverse/test/chat_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:chatverse/src/models/chat_room.dart' as _i2;
import 'package:chatverse/src/models/chat_user.dart' as _i9;
import 'package:chatverse/src/models/message.dart' as _i6;
import 'package:chatverse/src/services/auth_service.dart' as _i7;
import 'package:chatverse/src/services/chat_service.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChatRoom_0 extends _i1.SmartFake implements _i2.ChatRoom {
  _FakeChatRoom_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatService extends _i1.Mock implements _i3.ChatService {
  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  _i5.Stream<List<_i2.ChatRoom>> getRooms() => (super.noSuchMethod(
        Invocation.method(
          #getRooms,
          [],
        ),
        returnValue: _i5.Stream<List<_i2.ChatRoom>>.empty(),
        returnValueForMissingStub: _i5.Stream<List<_i2.ChatRoom>>.empty(),
      ) as _i5.Stream<List<_i2.ChatRoom>>);

  @override
  _i5.Future<_i2.ChatRoom> createRoom({
    required String? name,
    required List<String>? memberIds,
    required _i2.ChatRoomType? type,
    required List<String>? adminIds,
    required DateTime? createdAt,
    required DateTime? updatedAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRoom,
          [],
          {
            #name: name,
            #memberIds: memberIds,
            #type: type,
            #adminIds: adminIds,
            #createdAt: createdAt,
            #updatedAt: updatedAt,
          },
        ),
        returnValue: _i5.Future<_i2.ChatRoom>.value(_FakeChatRoom_0(
          this,
          Invocation.method(
            #createRoom,
            [],
            {
              #name: name,
              #memberIds: memberIds,
              #type: type,
              #adminIds: adminIds,
              #createdAt: createdAt,
              #updatedAt: updatedAt,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.ChatRoom>.value(_FakeChatRoom_0(
          this,
          Invocation.method(
            #createRoom,
            [],
            {
              #name: name,
              #memberIds: memberIds,
              #type: type,
              #adminIds: adminIds,
              #createdAt: createdAt,
              #updatedAt: updatedAt,
            },
          ),
        )),
      ) as _i5.Future<_i2.ChatRoom>);

  @override
  _i5.Future<void> deleteRoom(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #deleteRoom,
          [roomId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i6.Message>> getMessages(String? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessages,
          [roomId],
        ),
        returnValue: _i5.Stream<List<_i6.Message>>.empty(),
        returnValueForMissingStub: _i5.Stream<List<_i6.Message>>.empty(),
      ) as _i5.Stream<List<_i6.Message>>);

  @override
  _i5.Future<void> sendMessage({
    required String? roomId,
    required String? content,
    required _i6.MessageType? type,
    Map<String, dynamic>? metadata,
    String? replyTo,
    Map<String, dynamic>? attachments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #roomId: roomId,
            #content: content,
            #type: type,
            #metadata: metadata,
            #replyTo: replyTo,
            #attachments: attachments,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addMembersToRoom(
    String? roomId,
    List<String>? userIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMembersToRoom,
          [
            roomId,
            userIds,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeMembersFromRoom(
    String? roomId,
    List<String>? userIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMembersFromRoom,
          [
            roomId,
            userIds,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> muteRoom(
    String? roomId,
    bool? muted,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #muteRoom,
          [
            roomId,
            muted,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> archiveRoom(
    String? roomId,
    bool? archived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #archiveRoom,
          [
            roomId,
            archived,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setTyping(
    String? roomId,
    bool? isTyping,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTyping,
          [
            roomId,
            isTyping,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i7.AuthService {
  @override
  _i5.Stream<_i8.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i5.Stream<_i8.User?>.empty(),
        returnValueForMissingStub: _i5.Stream<_i8.User?>.empty(),
      ) as _i5.Stream<_i8.User?>);

  @override
  _i5.Future<_i9.ChatUser?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i5.Future<_i9.ChatUser?>.value(),
        returnValueForMissingStub: _i5.Future<_i9.ChatUser?>.value(),
      ) as _i5.Future<_i9.ChatUser?>);

  @override
  _i5.Future<void> updateUserProfile({
    String? name,
    String? photoUrl,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [],
          {
            #name: name,
            #photoUrl: photoUrl,
            #metadata: metadata,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateOnlineStatus(bool? isOnline) => (super.noSuchMethod(
        Invocation.method(
          #updateOnlineStatus,
          [isOnline],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i9.ChatUser>> searchUsers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
        ),
        returnValue: _i5.Future<List<_i9.ChatUser>>.value(<_i9.ChatUser>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i9.ChatUser>>.value(<_i9.ChatUser>[]),
      ) as _i5.Future<List<_i9.ChatUser>>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
